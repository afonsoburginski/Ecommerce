// schema.prisma


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  price       Int
  stock       Int
  images      String[]
  categories  Category[]
  orderItems  OrderItem[]
  tags        Tag[]
  status      ProductStatus
  createdAt   DateTime   @default(now())
  variants    Variant[]
}

enum ProductStatus {
  DRAFT
  ACTIVE
  ARCHIVED
}

model Variant {
  id        Int     @id @default(autoincrement())
  sku       String  @unique
  stock     Int
  size      String?
  color     String?
  product   Product @relation(fields: [productId], references: [id])
  productId Int

  OrderItem OrderItem[]
}

model Color {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  hexCode  String
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
}

model User {
  id                Int        @id @default(autoincrement())
  email             String     @unique
  name              String
  orders            Order[]
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  stripeCustomerId  String?
}

model Order {
  id            Int            @id @default(autoincrement())
  createdAt     DateTime       @default(now())
  status        OrderStatus    @default(PENDING)
  user          User           @relation(fields: [userId], references: [id])
  userId        Int
  transactionId String?
  orderItems    OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  price     Float
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  variant   Variant @relation(fields: [variantId], references: [id])
  variantId Int
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  RECEIVED
  CANCELED
  FAILED
}

model Tag {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
}

model Gallery {
  id        Int      @id @default(autoincrement())
  title     String
  url       String
  caption   String?
  createdAt DateTime @default(now())
}

